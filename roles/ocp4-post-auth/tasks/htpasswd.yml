---

- name: '[POST-OAUTH][HTPASSWD] Generate htpasswd hash for admin user'
  shell: >-
    htpasswd -nb "{{ ocp4_htpasswd_admin }}" "{{ ocp4_htpasswd_admin_password }}"|cut -d: -f2
  register: htpasswd_line
  when:
    - ocp4_htpasswd_admin_password is defined
    - config_htpasswd == True

- name: '[POST-OAUTH][HTPASSWD] Set fact admin user password'
  set_fact:
    ocp4_htpasswd_admin_password: "{{ htpasswd_line.stdout }}"
  when:
    - ocp4_htpasswd_admin_password is defined
    - htpasswd_line is succeeded

- name: '[POST-OAUTH][HTPASSWD] Generate htpasswd file'
  template:
    src: "htpasswd.j2"
    dest: "{{ files_path }}/users.htpasswd"
  when:
    - htpasswd_line is succeeded
    - config_htpasswd == True

- name: '[POST-OAUTH][HTPASSWD] Ensure htpasswd Secret is absent'
  k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: absent
    api_version: v1
    kind: Secret
    name: htpasswd-secret
    namespace: openshift-config
    validate_certs: false
    validate:
      fail_on_error: yes
  when:
    - config_htpasswd == True

- name: '[POST-OAUTH][HTPASSWD] Create htpasswd secret from htpasswd file'
  shell: "{{ files_path }}/oc --kubeconfig {{ kubeconfig }} --insecure-skip-tls-verify create secret generic htpasswd-secret -n openshift-config --from-file=htpasswd={{ files_path }}/users.htpasswd"
  when:
    - config_htpasswd == True

- name: '[POST-OAUTH][HTPASSWD] Update OAuth Configuration'
  k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('template', './templates/oauth-htpasswd.yml') | from_yaml }}"
  when:
    - config_htpasswd == True

- name: '[POSTINSTALL][HTPASSWD] Apply Cluster Admin User Htpasswd'
  shell:
    cmd: "{{ files_path }}/oc --kubeconfig {{ kubeconfig }} --insecure-skip-tls-verify adm policy add-cluster-role-to-user cluster-admin {{ ocp4_htpasswd_admin }}"
  when: config_htpasswd == True

- name: '[POST-OAUTH][HTPASSWD] Print User Information'
  debug:
    msg: "{{ item }}"
  loop:
  - "user.info: HTPasswd Authentication is enabled on this cluster."
  - "user.info: User `{{ ocp4_htpasswd_admin }}` is a cluster-admin"
  when:
    - config_htpasswd == True

#- name: '[POSTINSTALL] Create htpasswd Files'
#  community.general.htpasswd:
#    path: "{{ files_path }}/users.htpasswd"
#    name: "{{ htpasswd_user }}"
#    password: "{{ htpasswd_pass }}"
#    crypt_scheme: md5_crypt
#  when: config_htpasswd == True

#- name: '[POSTINSTALL] Create Secret htpasswd Files'
#  k8s:
#    kubeconfig: "{{ kubeconfig }}"
#    state: present
#    definition:
#      apiVersion: v1
#      kind: Secret
#      metadata:
#        name: htpass-secret
#        namespace: openshift-config
#      data:
#        htpasswd: "{{ lookup('file', '{{ files_path }}/users.htpasswd') | b64encode }}"
#    validate_certs: false
#    validate:
#      fail_on_error: yes
#  when: config_htpasswd == True

#- name: '[POSTINSTALL] Apply Htpasswd Oauth'
#  k8s:
#    kubeconfig: "{{ kubeconfig }}"
#    state: present
#    definition: "{{ lookup('template', 'oauth-htpasswd.j2') }}"
#    merge_type:
#    - merge
#  when: config_htpasswd == True

#- name: '[POSTINSTALL] Apply Cluster Admin User Htpasswd'
#  shell:
#    cmd: "{{ files_path }}/oc --kubeconfig {{ kubeconfig }} --insecure-skip-tls-verify adm policy add-cluster-role-to-user cluster-admin {{ htpasswd_user }}"
#  when: config_htpasswd == True




