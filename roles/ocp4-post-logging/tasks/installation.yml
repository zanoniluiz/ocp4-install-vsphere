---
# tasks file for roles/ocp4-post-logging
#https://docs.openshift.com/container-platform/4.5/operators/olm-adding-operators-to-cluster.html#olm-installing-operator-from-operatorhub-using-cli_olm-adding-operators-to-a-cluster

- name: '[POSTINSTALL][LOGGING] Create Namespaces'
  k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition: "{{ lookup('template', item) }}"
  with_items:
  - eo-namespace.yml
  - clo-namespace.yml

### ElasticSearch Operator

# An OperatorGroup is an OLM resource that selects target namespaces in which to generate required
# RBAC access for all Operators in the same namespace as the OperatorGroup
# The namespace to which you subscribe the Operator must have an OperatorGroup that matches the
# Operatorâ€™s InstallMode
- name: '[POSTINSTALL][LOGGING] Create Operator Group'
  k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition: "{{ lookup('file', 'eo-og.yml') }}"

# PackageManifest holds information about a package, which is a reference to
# one (or more) channels under a single package.
- name: '[POSTINSTALL][LOGGING] Get available ES channels'
  k8s_info:
    kubeconfig: "{{ kubeconfig }}"
    name: "elasticsearch-operator"
    kind: "PackageManifest"
    namespace: "openshift-marketplace"
  register: es_manifest
  when: es_channel is not defined

# Grab the ES Channel if is not defined in vars.yml
- name: '[POSTINSTALL][LOGGING] Set local var'
  set_fact:
     es_channel: "{{ es_manifest.resources[0].status.defaultChannel }}"
  when: es_channel is not defined

#- name: Subscribing on channel {{ es_channel }}
# K8s module does not handle generateName correctly, so we use oc client
#  k8s:
#    kubeconfig: "{{ kubeconfig }}"
#    state: present
#    definition: "{{ lookup('template', 'eo-sub.yaml') }}"

- name: '[POSTINSTALL][LOGGING] Create file'
  template:
    src: eo-sub.yaml
    dest: /tmp/eo-sub.yaml
    mode: '0600'

- name: '[POSTINSTALL][LOGGING] Subscribing ES on channel {{ es_channel }}'
  shell:
    cmd: KUBECONFIG={{ kubeconfig }} {{ user_path }}/oc create -f /tmp/eo-sub.yaml

- name: '[POSTINSTALL][LOGGING] Create RBAC'
  k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition: "{{ lookup('file', 'eo-rbac.yaml') }}"


### ClusterLogging Operator
- name: '[POSTINSTALL][LOGGING] Create CLO-OperatorGroup'
  k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition: "{{ lookup('file', 'clo-og.yaml') }}"

# Grab the CLO Channel if is not defined in vars.yml
- name: '[POSTINSTALL][LOGGING] Get available CLO channels'
  k8s_info:
    kubeconfig: "{{ kubeconfig }}"
    name: "cluster-logging"
    kind: "PackageManifest"
    namespace: "openshift-marketplace"
  register: clo_manifest
  when: clo_channel is not defined

- name: '[POSTINSTALL][LOGGING] Set local var'
  set_fact:
     clo_channel: "{{ clo_manifest.resources[0].status.defaultChannel }}"
  when: clo_channel is not defined

- name: '[POSTINSTALL][LOGGING] Create CLO-Subscription on channel {{ clo_channel }}'
  k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition: "{{ lookup('template', 'clo-sub.yaml') }}"